<div class="flex flex-col justify-center items-center gap-8 min-h-screen bg-gradient-to-br from-yellow-300 via-yellow-400 to-yellow-500">    
    <div id="upload-feedback" class="hidden w-full max-w-md mb-4 p-3 text-center bg-white rounded-lg font-semibold motion-preset-pop"></div>
    <div class="bg-white shadow-md rounded-lg p-6 w-full max-w-lg text-center motion-preset-fade-md space-y-6">
        <h1 class="text-2xl lg:text-3xl font-bold text-gray-800 text-center">
            Upload Pictures of Your Pet 🐾
        </h1>
        <div class="space-y-4">
            <label for="images" class="block text-lg font-semibold text-gray-600">
                Select Pictures
            </label>
            <input type="file" name="images" id="images" multiple
                class="block w-full text-gray-700 border rounded-lg py-2 px-3 cursor-pointer bg-gray-100 focus:ring focus:ring-yellow-300 focus:outline-none">

            <button id="submit"
                class="w-full px-4 py-2 bg-gradient-to-r from-yellow-400 to-yellow-500 text-white font-semibold rounded-lg shadow-md hover:shadow-lg hover:opacity-90 transition-all duration-300">
                Submit
            </button>
        </div>

        <div id="upload-status" class="hidden">
            <div class="flex items-center justify-center gap-2 animate-pulse">
                <svg class="w-6 h-6 text-yellow-500 animate-spin" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24">
                    <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                    <path class="opacity-75" fill="currentColor"
                        d="M4 12a8 8 0 018-8v8H4z"></path>
                </svg>
                <p class="text-yellow-600 font-semibold">Uploading...</p>
            </div>
        </div>
    </div>
</div>


<script>
    const submitBtn = document.getElementById('submit');
    const imagesInput = document.getElementById('images');
    const uploadStatus = document.getElementById('upload-status');
    const animal_id = new URL(window.location.href).searchParams.get("id")
    const upload_feedback = document.getElementById("upload-feedback")

    submitBtn.addEventListener('click', async () => {
        if (imagesInput.files.length === 0) {
            displayMessage(true, "Please select at least one file!")
            return;
        }
        
        uploadStatus.classList.remove('hidden');

        const formData = new FormData()
        for (const file of imagesInput.files) {
            formData.append('images', file)
        }
        formData.append('animal_id', animal_id)

        try {
            const response = await fetch('/rehome/upload-images', {
                method: 'POST',
                body: formData
            });

            const data = await response.json()

            uploadStatus.classList.add("hidden")

            if (!response.ok){
                displayMessage(true ,data.message)
                imagesInput.files = 0
            }else{
                displayMessage(false, data.message)
                setTimeout(()=>{
                    window.location.href = data.redirectTo
                }, 5000)
            }
        } catch (error) {
            alert('An unexpected error occurred! Please try again later!');
            uploadStatus.classList.add("hidden")
        } 
    })

    function displayMessage(errorStatus ,message){
        const upload_feedback = document.getElementById("upload-feedback")

        upload_feedback.classList.remove("hidden")
        upload_feedback.classList.remove("motion-opacity-out-0")

        if (upload_feedback.textContent != message){
            upload_feedback.textContent = message
        }

        if (errorStatus){
            upload_feedback.classList.replace("text-green-600", "text-red-600")
        }else{
            upload_feedback.classList.replace("text-red-600", "text-green-600")
        }

        setTimeout(()=>{
                upload_feedback.classList.add("motion-opacity-out-0")
            }, 3000)
    }
</script>
